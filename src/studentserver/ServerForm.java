/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ServerForm.java
 *
 * Created on Jan 28, 2011, 8:19:06 PM
 */

package studentserver;

import Common.PrivilegeMode;
import java.io.IOException;
import java.net.*;
import javax.swing.JOptionPane;


/**
 *
 * @author Thushan
 */
public class ServerForm extends javax.swing.JFrame {

    ServerSocket server;
    Boolean isconnected;
    /** Creates new form ServerForm */
    public ServerForm() {
        initComponents();
        statusText.setEditable(false);

        statusText.append("Connecting to user database\n");
        isconnected=DatabaseHandler.linkToDB();

        if(isconnected){
            statusText.append("Connected to user database\n");
        }
        else{
            statusText.setText("Creating a new database...\n");
            Boolean dbExist=DatabaseHandler.initiateDB();
            if(dbExist){
                statusText.append("Connecting to user database\n");
                DatabaseHandler.linkToDB();
                statusText.append("Creating tables...\n");
                DatabaseHandler.createTables();
            }
            else
                JOptionPane.showMessageDialog(null, "Database Server is not online\n");
        }

        if(!DatabaseHandler.usersExist()){
            JOptionPane.showMessageDialog(null, "Administrator account has not been created yet");
            new LoginDetailForm(PrivilegeMode.Administrator).setVisible(true);
        }
    }


    public void initiate(){


        statusText.append("Waiting for connections\n");
        try {
            server = new ServerSocket(4444);
            while (true) {
                new ServerThread(server.accept(), statusText,isconnected);
            }
        } catch  (IOException ex) {
            JOptionPane.showMessageDialog(null, "Unknown error occured");
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        statusText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        statusText.setColumns(20);
        statusText.setRows(5);
        jScrollPane1.setViewportView(statusText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea statusText;
    // End of variables declaration//GEN-END:variables

}
